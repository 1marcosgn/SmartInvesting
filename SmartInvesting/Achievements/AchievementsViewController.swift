//
//  AchievementsViewController.swift
//  SmartInvesting
//
//  Created Marcos Garcia on 1/5/19.
//  Copyright © 2019 Marcos Garcia. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class AchievementsViewController: UITableViewController, AchievementsViewProtocol {

	var presenter: AchievementsPresenterProtocol?
    var achievements = [Achievement]()

	override func viewDidLoad() {
        super.viewDidLoad()
        
        presenter = AchievementsPresenter(interface: self,
                                          interactor: AchievementsInteractor(),
                                          router: AchievementsRouter())
        
        configureTableView()
        setUpAchievementsTable()
    }

}

//MARK: Viper Methods -
extension AchievementsViewController {
    func setUpAchievementsTable() {
        guard let fetchedAchievements = presenter?.retrieveAchievements() else {
            return
        }
        
        achievements = fetchedAchievements
    }
}

//MARK: TableView Delegate Methods -
extension AchievementsViewController {
    
    func configureTableView() {
        let nib = UINib(nibName: "AchievementCell", bundle: .main)
        tableView.register(nib, forCellReuseIdentifier: "achievementCell")
    }
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return achievements.count
    }
    

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "achievementCell", for: indexPath) as! AchievementCell
        
        let achievement = achievements[indexPath.item]
        
        print(achievement.id)
        
        // Configure the cell...
        //cell.image.sd_setImage(with: currentPromotion?.imageUrl, placeholderImage: UIImage(named: "placeholder.png"))
        
        /// TODO: ADD PLACE HOLDER IN THE CELL
        
        /// TODO: CATCH THE COMPLETION BLOCK AND THEN ONLY THEN UPDATE THE REST OF THE UI ELEMENTS IN THE CELL
        
        /// TODO: FIRST PRIORITY SET UP THE IMAGE
        
        /// TODO: IF THE 'accesible' PROPERTY IS DISABLED THEN CELL IS FADED IN GRAY AND NOT ENABLE FOR USER INTERACTION
        
        return cell
    }
    
    /// TODO: REMOVE CELLS BELLOW LAST CELL
    
    /// TODO: REMOVE CELL SEPARATOR LINES
    
    /// TODO: IN THE CELL ... ROUND THE CORNERS
  
}
